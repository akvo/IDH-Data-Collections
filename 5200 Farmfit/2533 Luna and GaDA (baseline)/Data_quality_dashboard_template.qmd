---
title: "Dashboard Prep"
author: "Sandra Fudorov√°"
format: html
editor: visual
---

# Libraries

```{r}
library(readxl)
library(writexl)
library(dplyr)
library(tidyverse)
library(tidyr)
```

# Data

```{r}
data <- read_xlsx("Data 01_04_2025.xlsx")
revenue_repeat <- read_xlsx("Data 01_04_2025.xlsx", sheet = 2)
gradeAB <- read_xlsx("Data 01_04_2025.xlsx", sheet = 3)
labour <- read_xlsx("Data 01_04_2025.xlsx", sheet = 4)
labour_act <- read_xlsx("Data 01_04_2025.xlsx", sheet = 5)
inputs <- read_xlsx("Data 01_04_2025.xlsx", sheet = 6)
```

# Revenue Repeat Sheet

## 1. Measurements and Quantities

### a. Measurement Prod

```{r}
print(revenue_repeat$f_focus_measurement_prod_other)
revenue_repeat <- revenue_repeat %>%
  mutate(
    cal_focus_measurement_prod := ifelse(f_focus_measurement_prod == 1, 
                                          1, 
                                          ifelse(f_focus_measurement_prod == 77, 
                                                parse_number(f_focus_measurement_prod_other),
                                                 NA)), 
    f_focus_quant_prod = ifelse(f_focus_quant_prod == 9999 | f_focus_quant_prod == 9998, NA, f_focus_quant_prod ), 
    cal_focus_quant_prod = f_focus_quant_prod*cal_focus_measurement_prod
    ) 

  print(revenue_repeat$cal_focus_measurement_prod)
  print(revenue_repeat$cal_focus_quant_prod)
```

### b. Measurement Sold

```{r}
print(revenue_repeat$f_focus_measurement_sold_other)
revenue_repeat <- revenue_repeat %>%
  mutate(cal_focus_measurement_sold := ifelse(f_focus_measurement_sold == 1, 
      1, 
      ifelse(f_focus_measurement_sold == 77, 
             parse_number(f_focus_measurement_sold_other),
             NA)),
      f_focus_quant_sold = ifelse(f_focus_quant_sold == 9999 | f_focus_quant_sold == 9998, NA, f_focus_quant_sold ),
      cal_focus_quant_sold = f_focus_quant_sold * cal_focus_measurement_sold
      ) 

print(revenue_repeat$cal_focus_measurement_sold)
print(revenue_repeat$cal_focus_quant_sold)
```

### c. Measurement Sold Premium

```{r}
print(revenue_repeat$f_focus_measurement_sold_premium_other)
revenue_repeat <- revenue_repeat %>%
  mutate(cal_focus_measurement_sold_premium := ifelse(f_focus_measurement_sold_premium == 1, 
      1, 
      ifelse(f_focus_measurement_sold_premium == 77, 
             parse_number(f_focus_measurement_sold_premium_other),
             0)),
      f_focus_quant_sold_premium = ifelse(f_focus_quant_sold_premium == 9999 | f_focus_quant_sold_premium == 9998, NA, f_focus_quant_sold_premium ),
      cal_focus_quant_sold_premium = f_focus_quant_sold_premium* cal_focus_measurement_sold_premium) 

  print(revenue_repeat$cal_focus_measurement_sold_premium)
  print(revenue_repeat$cal_focus_quant_sold_premium)
```

### d. Measurement Lost

```{r}
print(revenue_repeat$f_focus_measurement_lost_other)
revenue_repeat <- revenue_repeat %>%
  mutate(cal_focus_measurement_lost := ifelse(f_focus_measurement_lost == 1, 
      1, 
      ifelse(f_focus_measurement_lost == 77, 
             parse_number(f_focus_measurement_lost_other),
             0)),
      f_focus_quant_lost = ifelse(f_focus_quant_lost == 9999 | f_focus_quant_lost == 9998, NA, f_focus_quant_lost ),
      cal_focus_quant_lost = f_focus_quant_lost*cal_focus_measurement_lost
      ) 

  print(revenue_repeat$cal_focus_measurement_lost)
  print(revenue_repeat$f_focus_quant_lost)
  print(revenue_repeat$cal_focus_quant_lost)
```

## 2. Combining values

```{r}
quant_price <- revenue_repeat %>%
  mutate(f_focus_avg_price = ifelse(f_focus_avg_price==9999|f_focus_avg_price==9998,NA, f_focus_avg_price))%>%
  group_by(`_submission__id`) %>%
  summarise(cal_focus_quant_prod_kg = sum(cal_focus_quant_prod, na.rm = TRUE), 
            cal_focus_quant_sold_kg = sum(cal_focus_quant_sold, na.rm = TRUE),
            cal_focus_quant_lost_kg = sum(cal_focus_quant_lost, na.rm = TRUE),
            cal_focus_quant_sold_premium_kg = sum(cal_focus_quant_sold_premium, na.rm = TRUE),
            cal_focus_price = mean(f_focus_avg_price), 
            cal_focus_measurement_sold = first(cal_focus_measurement_sold),
            f_focus_measurement_sold = first(f_focus_measurement_sold),
            f_focus_measurement_sold_other = first(f_focus_measurement_sold_other),
            f_focus_measurement_prod = first(f_focus_measurement_prod),
            f_focus_measurement_prod_other = first(f_focus_measurement_prod_other)
            )
```

# Labour sheet

## 1. Summary of needed vars

```{r}
labour_summary <- labour %>%
  group_by(`_submission__id`) %>%
  mutate(
    f_focus_labour_costs_season = ifelse(f_focus_labour_costs_season==9999|f_focus_labour_costs_season==9998,NA,f_focus_labour_costs_season),
    f_crop_labour_permanent_number= ifelse(f_crop_labour_permanent_number==9999|f_crop_labour_permanent_number==9998 | is.na(f_crop_labour_permanent_number),0,f_crop_labour_permanent_number),
    f_crop_labour_permanent_costs= ifelse(f_crop_labour_permanent_costs==9999|f_crop_labour_permanent_costs==9998,NA,f_crop_labour_permanent_costs))%>%
    
  summarise(cal_focus_labour_costs = sum(f_focus_labour_costs_season, na.rm = TRUE),
            max_permanent_labourers = max(f_crop_labour_permanent_number),
            cal_focus_labour_permanent_costs = sum(f_crop_labour_permanent_costs, na.rm= TRUE)
    
  )



```

\

# Labour Activities Sheet

## 1. Temporary activity cost

```{r}
labour_act <- labour_act %>%
  mutate(
    f_labour_days_activity = ifelse(f_labour_days_activity==9999|f_labour_days_activity==9998,NA,f_labour_days_activity),
    f_labour_temporary_workers_activity= ifelse(f_labour_temporary_workers_activity==9999|f_labour_temporary_workers_activity==9998,NA,f_labour_temporary_workers_activity),
    
    f_labour_temporary_wage_per_day_activity= ifelse(f_labour_temporary_wage_per_day_activity==9999|f_labour_temporary_wage_per_day_activity==9998,NA,f_labour_temporary_wage_per_day_activity),
    
    cal_labour_temporary_costs = f_labour_days_activity * f_labour_temporary_workers_activity * f_labour_temporary_wage_per_day_activity) 

temporary_costs_summary <- labour_act %>%
  group_by(`_submission__id`) %>%
  summarise(cal_labour_temporary_costs = replace_na(sum(cal_labour_temporary_costs, na.rm=TRUE),0))
```

## 2. Select two

```{r}

labour_act_summary <- labour_act %>%
  group_by(`_submission__id`) %>%
  slice_max(order_by = cal_labour_temporary_costs, n = 2, with_ties = FALSE) %>%
  mutate(rank = row_number()) %>% 
  ungroup() %>%
  pivot_wider(
    id_cols = `_submission__id`,
    names_from = rank,
    values_from = c(
      current_activity,
      f_labour_days_activity,
      f_labour_temporary_workers_activity,
      f_labour_temporary_wage_per_day_activity,
      cal_labour_temporary_costs
    ),
    names_glue = "{.value}_{rank}"
  )


```

# Inputs Sheet

## 1. calculating inputs cost

```{r}
inputs_summary <- inputs %>%
    mutate(across(starts_with("f_inputs_cost"), ~ ifelse(.x == 9999 | .x == 9998, NA, .x))) %>%
  mutate(total_inputs_costs = rowSums(across(starts_with("f_inputs_cost")), na.rm = TRUE)) %>%
  group_by(`_submission__id`) %>%
  summarise(cal_inputs_costs = sum(total_inputs_costs, na.rm = TRUE))

```

# Data Sheet

## 1. General farm costs

```{r}
columns = c("f_mech_equip_costs","f_nonmech_equip_costs", "f_materials_other_costs","f_land_costs", "f_coop_fee", "hh_loan_one_value_interest", "hh_loan_one_size", "hh_loan_two_value_interest", "hh_loan_two_size")
data <- data %>%
  mutate(across(all_of(columns), ~ ifelse(.x == 9999 | .x == 9998, NA, .x))) %>%
  replace_na(list(
    f_mech_equip_costs = 0,
    f_nonmech_equip_costs = 0,
    f_materials_other_costs = 0,
    f_land_costs = 0,
    f_coop_fee = 0,
    hh_loan_one_value_interest = 0,
    hh_loan_one_size = 0,
    hh_loan_two_value_interest = 0,
    hh_loan_two_size = 0
  )) %>%
  
  mutate(
    cal_equipment_costs = f_mech_equip_costs + f_nonmech_equip_costs + f_materials_other_costs,
    
    cal_farm_costs_loan_1 = ifelse(
      hh_loan_one_value_interest == 0, 0,
      hh_loan_one_size/ (100/ hh_loan_one_value_interest)
    ),
    
    cal_farm_costs_loan_2 = ifelse(
      hh_loan_two_value_interest == 0, 0,
      hh_loan_two_size/(100/hh_loan_two_value_interest)
    ),
    
    cal_farm_costs_general = cal_equipment_costs + cal_farm_costs_loan_1 + cal_farm_costs_loan_2 + f_land_costs + f_coop_fee
  )

```

## 3. Other focus cost

```{r}
data <- data %>%
    mutate(across(starts_with("f_focus_cost"), ~ ifelse(.x == 9999 | .x == 9998, 0, .x))) %>%
  mutate(across(starts_with("f_focus_cost"), ~replace_na(.x, 0))) %>%
  mutate(
    cal_focus_other_costs = rowSums(across(starts_with("f_focus_cost")))
  )

```

## 2. Selecting needed columns

```{r}

final <- data %>%
  rename("_submission__id" = "_id") %>%
  select(uuid, duration, submitter, admin1_name,admin2_name, admin3_name, f_unit_land, f_size, f_focus_crop_size, starts_with("f_types_crop"), f_othermaincrop_1, f_othermaincrop_2, cal_farm_costs_general, cal_focus_other_costs, `_submission__id`, `_pi_geolocation_latitude`, `_pi_geolocation_longitude`, hh_farmer_gender, f_certification_yesno, f_nonfarm_enterpr_income_month,f_income_offfarmlabour_month, f_income_other_rentland_month,f_income_other_rentequipment_month, f_income_other_valueaddactivities_month, f_income_other_seeds_seedlings_month, f_income_other_shareexperience_month, f_income_other_remittances_month, f_income_other_gifts_month, f_income_other_credit_month, f_income_expertise_month, f_income_other_month)

```

# Merging

```{r}

safe_left_join <- function(x, y, by) {
  left_join(
    x %>% distinct(across(all_of(by)), .keep_all = TRUE),
    y %>% distinct(across(all_of(by)), .keep_all = TRUE),
    by = by
  )
}

# Now perform your joins neatly and uniformly:
final <- final %>%
  safe_left_join(inputs_summary, by = "_submission__id") %>%
  safe_left_join(labour_act_summary, by = "_submission__id") %>%
  safe_left_join(quant_price, by = "_submission__id") %>%
  safe_left_join(temporary_costs_summary, by = "_submission__id") %>%
  safe_left_join(labour_summary, by = "_submission__id")


```

# Final calculations

## 1. Per kg

```{r}
final <- final %>%
  mutate(
    cal_farm_costs_general_kg = cal_farm_costs_general/cal_focus_quant_prod_kg, 
    cal_inputs_costs_kg = cal_inputs_costs/cal_focus_quant_prod_kg, 
    cal_focus_other_costs_kg = cal_focus_other_costs/cal_focus_quant_prod_kg, 
    cal_focus_costs = cal_focus_labour_costs + cal_inputs_costs + cal_focus_other_costs, 
    cal_focus_costs_kg = cal_focus_costs/cal_focus_quant_prod_kg
  )

```

## 2. Land size calculations

### a. Conversion

if no other

```{r}
data$f_unit_land_other
final <- final %>%
  mutate(
    f_size = ifelse(f_size ==9999|f_size==9998,NA,f_size),
    f_focus_crop_size =ifelse(f_focus_crop_size==9999|f_focus_crop_size==9998,NA,f_focus_crop_size)
  ) %>%
  mutate(
    cal_size_ha = 
      ifelse(f_unit_land == 1, f_size, 
             ifelse(f_unit_land == 2, f_size * 0.404686, f_size * 0.0001)), 
    cal_focus_crop_size = 
      ifelse(f_unit_land == 1, f_focus_crop_size, 
             ifelse(f_unit_land == 2, f_focus_crop_size * 0.404686, f_focus_crop_size * 0.0001
                    )), 
    f_unit_land_name = 
      ifelse(f_unit_land == 1, "Hectares", 
             ifelse(f_unit_land == 2, "Acres", 
                    ifelse(f_unit_land == 3, "Squared Meters", "Other")
                    )))
final$cal_focus_crop_size
final$f_unit_land_name
```

### b. per ha

```{r}
final <- final %>%
  mutate(cal_focus_productivity_kg_hectare = cal_focus_quant_prod_kg/cal_focus_crop_size)
```

## 2. Last cal

```{r}
final <- final %>%
  mutate(cal_focus_productivity_kg_hectare = cal_focus_quant_prod_kg/cal_focus_crop_size, 
         cal_focus_price_kg = cal_focus_price/cal_focus_measurement_sold, 
         cal_focus_revenue = cal_focus_quant_sold_kg*cal_focus_price_kg,
         one = "x",
         map = paste(`_pi_geolocation_latitude`, `_pi_geolocation_longitude`, sep = ","))
```

## 3. Adding names

```{r}
final <- final %>%
  mutate(f_othermaincrop_1_names = case_when(
    f_othermaincrop_1 == 0 ~ "None",
    f_othermaincrop_1 == 1 ~ "Rice",
    f_othermaincrop_1 == 2 ~ "Cassava",
    f_othermaincrop_1 == 3 ~ "Groundnut",
    f_othermaincrop_1 == 4 ~ "Sweet Potatoes",
    f_othermaincrop_1 == 5 ~ "Pepper",
    f_othermaincrop_1 == 6 ~ "Garden eggs",
    f_othermaincrop_1 == 7 ~ "Maize",
    f_othermaincrop_1 == 8 ~ "Krainkrain",
    f_othermaincrop_1 == 9 ~ "Banana",
    f_othermaincrop_1 == 10 ~ "Orange",
    f_othermaincrop_1 == 11 ~ "Cola",
    f_othermaincrop_1 == 12 ~ "Mango",
    f_othermaincrop_1 == 13 ~ "Palm",
    f_othermaincrop_1 == 14 ~ "Avocado",
    f_othermaincrop_1 == 77 ~ "Other, please specify",
    TRUE ~ NA_character_
  ))

final <- final %>%
  mutate(f_othermaincrop_2_names = case_when(
    f_othermaincrop_2 == 0 ~ "None",
    f_othermaincrop_2 == 1 ~ "Rice",
    f_othermaincrop_2 == 2 ~ "Cassava",
    f_othermaincrop_2 == 3 ~ "Groundnut",
    f_othermaincrop_2 == 4 ~ "Sweet Potatoes",
    f_othermaincrop_2 == 5 ~ "Pepper",
    f_othermaincrop_2 == 6 ~ "Garden eggs",
    f_othermaincrop_2 == 7 ~ "Maize",
    f_othermaincrop_2 == 8 ~ "Krainkrain",
    f_othermaincrop_2 == 9 ~ "Banana",
    f_othermaincrop_2 == 10 ~ "Orange",
    f_othermaincrop_2 == 11 ~ "Cola",
    f_othermaincrop_2 == 12 ~ "Mango",
    f_othermaincrop_2 == 13 ~ "Palm",
    f_othermaincrop_2 == 14 ~ "Avocado",
    f_othermaincrop_2 == 77 ~ "Other, please specify",
    TRUE ~ NA_character_
  ))


final <- final %>%
  mutate(submitter_names = case_when(
    submitter == 1 ~ "Alfred Berewa",
    submitter == 2 ~ "Theresa Boani",
    submitter == 3 ~ "Richard Fofanah",
    submitter == 4 ~ "Andrew Sheku Musa",
    submitter == 5 ~ "Ibrahim Sheriff",
    submitter == 6 ~ "Mary Salia",
    submitter == 7 ~ "Peter Barnet",
    submitter == 8 ~ "Sabaina Bockarie",
    submitter == 9 ~ "Ibrahim Kamara",
    submitter == 10 ~ "Musa Kawa",
    TRUE ~ NA_character_
  ))


```

# Excluding problem observations

```{r}
uuid_list <- c(20250327115455,20250327131551,20250328095149,
               20250327192737,20250327194355,20250327085413,
               20250327172605,20250327134015,20250331091122,
               20250328094223,20250328175859,20250328125627,
               20250328172050,20250330214831,20250328162132,
               20250328172419,20250328182404,20250328153730, 
               20250329142658,20250329122439,20250328171631,
               20250329081410,20250328092429,20250331035515,
               20250328080033
               )

final <- final %>% 
  filter(!uuid %in% uuid_list)
```

# Get the file

```{r}

write_xlsx(final, "Quality Check.xlsx")

```

```{r}
#RUN ALL
```
